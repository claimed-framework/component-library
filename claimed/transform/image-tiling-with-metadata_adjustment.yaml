name: image-tiling-with-metadata-adjustment
description: "## Xview Dataset clipping  â€“ CLAIMED V0.1"

inputs:
- {name: log_level, type: String, description: "update log level", default: "INFO"}
- {name: directory_path, type: String, description: "source is the path to the folder with the unzipped .tif images from xview dataset"}
- {name: destination, type: String, description: "destination is the path to the folder which saves all the extracted tiles."}
- {name: tile_size_x, type: Integer, description: "Each image is cropped using a rectangular window with edge_length tile_size_x and tile_size_y which has to be given in number of pixels", default: "64"}
- {name: tile_size_y, type: Integer, description: "", default: "64"}
- {name: stride_x, type: Integer, description: "For tumbling window stride_x must equal tile_size_x and stride_y must equal tile_size_y", default: "32"}
- {name: stride_y, type: Integer, description: "stride_y is the length in pixels the sliding window is moved down after completing a row", default: "32"}


outputs:


implementation:
    container:
        image: docker.io/lorenzweingart/claimed-image-tiling-with-metadata-adjustment:0.1
        command:
        - sh
        - -ec
        - |
          ipython ./claimed_image-tiling-with-metadata_adjustment.ipynb log_level="${0}" directory_path="${1}" destination="${2}" tile_size_x="${3}" tile_size_y="${4}" stride_x="${5}" stride_y="${6}" 
        - {inputValue: log_level}
        - {inputValue: directory_path}
        - {inputValue: destination}
        - {inputValue: tile_size_x}
        - {inputValue: tile_size_y}
        - {inputValue: stride_x}
        - {inputValue: stride_y}
